{
  "blogs": [
    {
      "title": "React hooks",
      "details": "Here, useState is a Hook (we’ll talk about what this means in a moment). We call it inside a function component to add some local state to it. React will preserve this state between re-renders. useState returns a pair: the current state value and a function that lets you update it. You can call this function from an event handler or somewhere else. It’s similar to this.setState in a class, except it doesn’t merge the old and new state together. (We’ll show an example comparing useState to this.state in Using the State Hook.)",
      "author": "evjjenui",
      "date": "25/03/2021",
      "id": 1
    },
    {
      "title": "Personal theme",
      "details": "Here, useState is a Hook (we’ll talk about what this means in a moment). We call it inside a function component to add some local state to it. React will preserve this state between re-renders. useState returns a pair: the current state value and a function that lets you update it. You can call this function from an event handler or somewhere else. It’s similar to this.setState in a class, except it doesn’t merge the old and new state together. (We’ll show an example comparing useState to this.state in Using the State Hook.)",
      "author": "person_1",
      "date": "21/03/2031",
      "id": 2
    },
    {
      "title": "Blogger theme",
      "details": "Here, useState is a Hook (we’ll talk about what this means in a moment). We call it inside a function component to add some local state to it. React will preserve this state between re-renders. useState returns a pair: the current state value and a function that lets you update it. You can call this function from an event handler or somewhere else. It’s similar to this.setState in a class, except it doesn’t merge the old and new state together. (We’ll show an example comparing useState to this.state in Using the State Hook.)",
      "author": "blogger_1",
      "date": "25/03/2021",
      "id": "asdasdasdas"
    },
    {
      "title": "Routes",
      "author": "Evjjenui",
      "details": " This site has 3 pages, all of which are rendered\n// dynamically in the browser (not server rendered).\n//\n// Although the page does not ever refresh, notice how\n// React Router keeps the URL up to date as you navigate\n// through the site. This preserves the browser history,\n// making sure things like the back button and bookmarks\n// work properly.\n",
      "date": "2021-04-30",
      "id": 11
    },
    {
      "title": "new TITTLE",
      "author": "noT ME",
      "details": "some text here ...\nsome text here ...some text here ...\nsome text here ...some text here ...\nsome text here ...some text here ...\nsome text here ...some text here ...\nsome text here ...some text here ...\nsome text here ...some text here ...\nsome text here ...some text here ...\nsome text here ...some text here ...\nsome text here ...some text here ...\nsome text here ...some text here ...\nsome text here ...some text here ...\nsome text here ...",
      "date": "2021-04-30",
      "id": 12
    },
    {
      "title": "1234r",
      "author": "12e3r",
      "details": "f2ef2gf211",
      "date": "2021-05-25",
      "id": 13
    }
  ],
  "modal_items": [
    {
      "name": "12",
      "addInfo": "12",
      "price": "12",
      "date": "2021-05-01",
      "id": 1619855412944
    },
    {
      "name": "32",
      "addInfo": "32",
      "price": "23",
      "date": "2021-05-01",
      "id": 1619855417690
    },
    {
      "name": "434",
      "addInfo": "54",
      "price": "54",
      "date": "2021-05-01",
      "id": 1619855421141
    }
  ],
  "task_planner": []
}